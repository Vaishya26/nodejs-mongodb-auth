<!DOCTYPE html>
<html lang="en">
	<head>
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">	
    	<script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
		<title>AjnaConnect SignUp</title>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
		<style>
			canvas 
			{
				position: absolute;
				top:0;
				left:0;
				z-index:-99;
			}
			.signup-div 
			{
				width: 430px;
				padding: 35px;
				border-radius: 15px;
				color:black;
				/* background: rgba(8,8,8,0.7); */
				background: rgba(255,255,255,0.5);
				box-shadow: 1px 1px 20px rgba(0, 0, 0, 0.5);
				z-index: 1;
			}
			label
			{
				color:black !important;
			}
			.logo 
			{
				background-image: url("ajnalens-logo.png");
				background-repeat: no-repeat;
				width:100px;
				height:100px;
				/* border-radius: 50%; */
				margin: auto;
			}
			body 
			{
				width: 100vw;
				height: 100vh;
				margin: 0;
				/* background: black; */
				overflow: hidden;
				display: flex;
				justify-content: center;
				align-items: center;
			}
					
		</style>
	</head>
	<body>
        <form id="ajnaAuth" action="/signup" method="post">
            <div class="signup-div">
                <div class="row">
                  <div class="logo"></div>
                </div>
                <div class="row center-align">
                  <h5>Sign Up</h5>
                </div>
                <div class="row">
                  <div class="input-field col s12">
                    <input id="email_input" type="text" class="validate" name="username" required>
                    <label for="email_input">Username</label>
                  </div>
                </div>
                <div class="row">
                  <div class="input-field col s12">
                    <input id="password_input" type="password" class="validate" name="password" required>
                    <label for="password_input">Password</label>
                    <div><a href="/login"><b>Already have an account, Login Here</b></a></div>
                  </div>
                </div>
                <div class="row"></div>
                <div class="row">
                  <div class="col s6"></div>
                  <div class="col s6 right-align"><a class="waves-effect waves-light btn" onclick="document.getElementById('ajnaAuth').submit()">Sign Up</a></div>
                </div>
              </div>
        </form>
		

		<script type="module">

			import * as THREE from 'three/build/three.module.js';

			import { AnaglyphEffect } from 'three/jsm/effects/AnaglyphEffect.js';

			var container, camera, scene, renderer, effect;

			var spheres = [];

			var mouseX = 0;
			var mouseY = 0;

			var windowHalfX = window.innerWidth / 2;
			var windowHalfY = window.innerHeight / 2;

			document.addEventListener( 'mousemove', onDocumentMouseMove, false );

			init();
			animate();

			function init() {

				container = document.createElement( 'div' );
				document.body.appendChild( container );

				camera = new THREE.PerspectiveCamera( 60, window.innerWidth / window.innerHeight, 0.01, 100 );
				camera.position.z = 3;
				camera.focalLength = 3;

				var path = "three/textures/cube/pisa/";
				var format = '.png';
				var urls = [
					path + 'px' + format, path + 'nx' + format,
					path + 'py' + format, path + 'ny' + format,
					path + 'pz' + format, path + 'nz' + format
				];

				var textureCube = new THREE.CubeTextureLoader().load( urls );

				scene = new THREE.Scene();
				scene.background = textureCube;

				// var geometry = new THREE.SphereBufferGeometry( 0.1, 32, 16 );
				// var material = new THREE.MeshBasicMaterial( { color: 0xffffff, envMap: textureCube } );

				// for ( var i = 0; i < 500; i ++ ) {

				// 	var mesh = new THREE.Mesh( geometry, material );

				// 	mesh.position.x = Math.random() * 10 - 5;
				// 	mesh.position.y = Math.random() * 10 - 5;
				// 	mesh.position.z = Math.random() * 10 - 5;

				// 	mesh.scale.x = mesh.scale.y = mesh.scale.z = Math.random() * 3 + 1;

				// 	scene.add( mesh );

				// 	spheres.push( mesh );

				// }

				//

				renderer = new THREE.WebGLRenderer();
				renderer.setPixelRatio( window.devicePixelRatio );
				container.appendChild( renderer.domElement );

				var width = window.innerWidth || 2;
				var height = window.innerHeight || 2;

				effect = new AnaglyphEffect( renderer );
				effect.setSize( width, height );

				//

				window.addEventListener( 'resize', onWindowResize, false );

			}

			function onWindowResize() {

				windowHalfX = window.innerWidth / 2;
				windowHalfY = window.innerHeight / 2;

				camera.aspect = window.innerWidth / window.innerHeight;
				camera.updateProjectionMatrix();

				effect.setSize( window.innerWidth, window.innerHeight );

			}

			function onDocumentMouseMove( event ) {

				mouseX = ( event.clientX - windowHalfX ) / 100;
				mouseY = ( event.clientY - windowHalfY ) / 100;

			}

			//

			function animate() {

				requestAnimationFrame( animate );

				render();

			}

			function render() {

				var timer = 0.0001 * Date.now();

				camera.position.x += ( mouseX - camera.position.x ) * .05;
				camera.position.y += ( - mouseY - camera.position.y ) * .05;

				camera.lookAt( scene.position );

				for ( var i = 0, il = spheres.length; i < il; i ++ ) {

					var sphere = spheres[ i ];

					sphere.position.x = 5 * Math.cos( timer + i );
					sphere.position.y = 5 * Math.sin( timer + i * 1.1 );

				}

				effect.render( scene, camera );

			}

		</script>

	</body>
</html>
